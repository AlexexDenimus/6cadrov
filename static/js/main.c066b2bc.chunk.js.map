{"version":3,"sources":["components/Root.js","components/ProgressBar.js","App.js","serviceWorker.js","index.js"],"names":["Body","styled","div","Button","button","Root","props","title","children","noButton","disabled","onClick","Wrapper","Line","span","progress","ProgressBar","Heading","h1","App","useState","AType","setAType","A","setA","Ch","setCh","DP","setDP","OP","useRef","B","Apl","Ab","Chr","Kn","distance","setDistance","currentPage","setCurrentPage","currentProgress","console","log","handleNextClick","handleAChange","event","preventDefault","parseInt","current","value","handleDPChange","NaN","handleChChange","type","id","name","onChange","e","target","htmlFor","isNaN","flexDirection","alignItems","justifyContent","min","defaultValue","ref","toFixed","alignSelf","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c066b2bc.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst Body = styled.div`\r\n    max-width: 100%;\r\n    min-height: 200px;\r\n    background-color: #D3D3D3;\r\n    padding: 24px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    border-radius: 4px;\r\n    box-shadow: 0 2px 8px rgba(0,0,0,0.26);\r\n`\r\n\r\nconst Button = styled.button`\r\n    width: 64px;\r\n    align-self: flex-end;\r\n    margin-top: 24px;\r\n    cursor: pointer;\r\n`\r\n\r\nexport const Root = (props) => (\r\n    <Body>\r\n        <p>{props.title}</p>\r\n        {props.children}\r\n        {!props.noButton && <Button disabled={props.disabled} onClick={props.onClick}>Дальше</Button>}\r\n    </Body>\r\n)","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n    height: 4px;\r\n    width: 100%;\r\n    border-radius: 4px;\r\n    margin-bottom: 8px;\r\n    box-shadow: 0 2px 8px rgba(0,0,0,0.19);\r\n    background-color: white;\r\n`;\r\n\r\nconst Line = styled.span`\r\n    display: block;\r\n    height: 100%;\r\n    width: ${ props => `${props.progress}%` };\r\n    background-color: #D3D3D3;\r\n    position: relative;\r\n    overflow: hidden;\r\n    transition-duration: 1.5s;\r\n`;\r\n\r\nexport const ProgressBar = (props) => (\r\n    <Wrapper>\r\n        <Line progress={props.progress}></Line>\r\n    </Wrapper>\r\n)\r\n\r\n","import React, { useState, useRef } from 'react';\nimport { Box, Flex } from 'rebass';\nimport styled from 'styled-components'\nimport { Root } from './components/Root';\nimport { ProgressBar } from './components/ProgressBar';\n\nconst Heading = styled.h1`\n  font-size: 72px;\n`;\n\nconst Body = styled.div`\n  width: 900px;\n  margin: 300px auto 0;\n`\n\nfunction App() {\n  const [AType, setAType] = useState('');\n  const [A, setA] = useState(0);\n  const [Ch, setCh] = useState(0);\n  const [DP, setDP] = useState(0);\n  const OP = useRef();\n  const B = useRef();\n  const Apl = useRef();\n  const Ab = useRef();\n  const Chr = useRef();\n  const Kn = useRef();\n  const [distance, setDistance] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const currentProgress = currentPage/distance*100;\n\n  console.log(currentProgress)\n\n  const handleFirstClick = () => {\n    if (AType === \"current\") {\n      setCurrentPage(2);\n    }\n    if (AType === \"long\") {\n      setCurrentPage(2);\n      setDistance(3);\n    }\n    setAType('');\n  }\n\n  const handleNextClick = () => {\n    setCurrentPage(currentPage + 1);\n    console.log(AType, currentPage, distance)\n  }\n\n  const handleAChange = (event) => {\n    event.preventDefault();\n    setA(parseInt(Chr.current.value) * parseInt(Kn.current.value))\n  }\n\n  const handleDPChange = (event) => {\n    event.preventDefault();\n    if (AType === 'upgrade'){\n      if (parseInt(Apl.current.value) < parseInt(Ab.current.value)) {\n        return setDP(NaN);\n      }\n      setDP(parseInt(Apl.current.value) - parseInt(Ab.current.value))\n      setA(DP + Ch)\n      return;\n    }\n    if (AType === 'swap'){\n      setDP(parseInt(Apl.current.value) * parseInt(Ab.current.value))\n      setA(DP + Ch)\n      return;\n    }\n  }\n\n  const handleChChange = (event) => {\n    event.preventDefault();\n    if ((parseInt(B.current.value) === 0) && (parseInt(OP.current.value) > 0)) {\n      return setCh(NaN);\n    }\n    return setCh(parseInt(OP.current.value) / parseInt(B.current.value))\n  }\n\n  console.log(AType, distance, currentPage, A, )\n  return (\n    <Body>\n    <ProgressBar progress={currentProgress} />\n      {(currentPage === 1) && \n        (<Root title=\"Выберите период для рассчёта потребности персонала (A)\" onClick={handleFirstClick} disabled={AType === '' ? true : false}>\n          <Box>\n            <input type=\"radio\" id=\"choice1\"\n              name=\"A\" value=\"current\" onChange={e => setAType(e.target.value)} />\n            <label htmlFor=\"choice1\">Текущая потребность в специалиста</label>\n          </Box>\n          <Box>\n            <input type=\"radio\" id=\"choice2\"\n              name=\"A\" value=\"long\" onChange={e => setAType(e.target.value)}  />\n            <label htmlFor=\"choice2\">Долговременная потребность в специалиста</label>\n          </Box>\n        </Root>) \n      }\n        {(currentPage === 2 && distance === 3) && \n          (<Root title=\"Введите данные для вычисления потребности персонала\" onClick={handleNextClick} disabled={isNaN(A) ? true : false}>\n            <Flex flexDirection=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\n            <label htmlFor=\"workerCount\">Среднесписочна численность рабочих</label>\n              <input type=\"number\" id=\"workerCount\"\n                name=\"Chr\" min='0' defaultValue=\"0\" onChange={handleAChange} ref={Chr}/>\n            </Flex>\n            <Flex flexDirection=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\n            <label htmlFor=\"coefficient\">Нормативный коэффициент насыщенности специалистами</label>\n              <input type=\"number\" id=\"coefficient\"\n                name=\"Kn\" min='0' defaultValue=\"0\" onChange={handleAChange} ref={Kn} />\n            </Flex>\n          </Root>) \n        }\n        {(currentPage === 2 && distance === 5) && \n          (<Root title=\"Введите данные для вычисления базовой потребности в кадрах\" onClick={handleNextClick} disabled={isNaN(Ch) ? true : false}>\n            <h3>Ч = ОП / В = {Ch.toFixed(2)}</h3>\n            <Flex flexDirection=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\n            <label htmlFor=\"volume\">Объем производства (ОП)</label>\n              <input type=\"number\" id=\"volume\"\n                name=\"OP\" min='0' defaultValue=\"0\" onChange={handleChChange} ref={OP}/>\n            </Flex>\n            <Flex flexDirection=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\n            <label htmlFor=\"singleWorker\">Выработка на одного работающего (В)</label>\n              <input type=\"number\" id=\"singleWorker\"\n                name=\"B\" min='0' defaultValue=\"0\" onChange={handleChChange} ref={B} />\n            </Flex>\n          </Root>) \n        }\n        {(currentPage === 3 && distance === 5) && \n          (<Root title=\"Для каких целей возникла дополнительная потребность в кадрах\" onClick={handleNextClick} disabled={AType === '' ? true : false}>\n            <Box>\n              <input type=\"radio\" id=\"choice3\"\n                name=\"DP\" value=\"upgrade\" onChange={e => setAType(e.target.value)} />\n              <label htmlFor=\"choice3\">Происходит развитие предприятия</label>\n            </Box>\n            <Box>\n              <input type=\"radio\" id=\"choice4\"\n                name=\"DP\" value=\"swap\" onChange={e => setAType(e.target.value)}  />\n              <label htmlFor=\"choice4\">Частичная замена специалистов</label>\n            </Box>\n          </Root>) \n        }\n        {(currentPage === 4 && distance === 5 && AType === 'upgrade') && \n          (<Root title=\"Введите данные для вычисления дополнительной потребности в кадрах\" onClick={handleNextClick} disabled={isNaN(DP) ? true : false}>\n            <h3>ДП = Апл - Аб = {DP}</h3>\n            <Flex flexDirection=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\n            <label htmlFor=\"common\">Общая потребность в специалистах в планируемый период (Апл)</label>\n              <input type=\"number\" id=\"common\"\n                name=\"Apl\" min='0' defaultValue=\"0\" onChange={handleDPChange} ref={Apl}/>\n            </Flex>\n            <Flex flexDirection=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\n            <label htmlFor=\"basic\">Общая потребность в специалистах в базовый период (Аб)</label>\n              <input type=\"number\" id=\"basic\"\n                name=\"Ab\" min='0' defaultValue=\"0\" onChange={handleDPChange} ref={Ab} />\n            </Flex>\n          </Root>) \n        }\n          {(currentPage === 4 && distance === 5 && AType === 'swap') && \n            (<Root title=\"Введите данные для вычисления дополнительной потребности в кадрах\" onClick={handleNextClick} disabled={isNaN(DP) ? true : false}>\n              <h3>ДП = Апл * Кв = {DP.toFixed()}</h3>\n              <Flex flexDirection=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\n              <label htmlFor=\"common\">Общая потребность в специалистах в планируемый период (Апл)</label>\n                <input type=\"number\" id=\"common\"\n                  name=\"Apl\" min='0' defaultValue=\"0\" onChange={handleDPChange} ref={Apl}/>\n              </Flex>\n              <Flex flexDirection=\"row\" alignItems=\"center\" justifyContent=\"space-between\">\n              <label htmlFor=\"basic\">Коэффициент выбытия специалистов (Кв)</label>\n                <input type=\"number\" id=\"basic\"\n                  name=\"Ab\" min='0' defaultValue=\"0\" onChange={handleDPChange} ref={Ab} />\n              </Flex>\n            </Root>) \n          }\n          {((currentPage === 5 && distance === 5) || (currentPage === 3 && distance === 3)) && \n            (<Root title=\"Общая потребность предприятия в кадрах составила:\" noButton>\n                <Box alignSelf=\"center\"><Heading>{A.toFixed()}</Heading></Box>\n            </Root>) \n          }\n        </Body>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}